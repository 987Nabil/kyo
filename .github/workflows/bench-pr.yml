name: Benchmark PR
on:
  issue_comment:
    types: [created]

jobs:
  trigger-on-comment:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/benchmark')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract PR Number
        id: get-pr-number
        run: echo "::set-output name=number::${{ github.event.issue.number }}"

      - name: Trigger Benchmark for Base Revision
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'bench.yml', // Or the numeric ID of the workflow
              ref: '${{ github.base_ref }}', // The base branch of the PR
              inputs: {
                index: '${{ steps.get-pr-number.outputs.number }}',
                selector: "MtlBench"
              }
            });

      - name: Trigger Benchmark for New Revision
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'bench.yml', // Or the numeric ID of the workflow
              ref: '${{ github.event.pull_request.head.ref }}', // The head branch of the PR
              inputs: {
                index: '${{ steps.get-pr-number.outputs.number }}',
                selector: "MtlBench"
              }
            });

      - name: Comment PR with Benchmark Index Link
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = ${{ steps.get-pr-number.outputs.number }};
            const commentBody = `Benchmark is complete. View the results [here](https://example.com/benchmark/${issueNumber})`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: commentBody
            });
            